include: 'https://gitlab.gnome.org/GNOME/citemplates/raw/master/flatpak/flatpak_ci_initiative.yml'

stages:
  - check
  - test
  - deploy

variables:
    BUNDLE: "org.gnome.FractalDevel.flatpak"
    MANIFEST_PATH: "flatpak/org.gnome.Fractal.json"
    FLATPAK_MODULE: "fractal"
    FLATPAK_IMAGE: "quay.io/gnome_infrastructure/gnome-runtime-images:gnome-43"

.flatpak_cache_template: &flatpak_cache
    cache:
        key: "flatpak"
        paths:
          - .flatpak-builder/cache/
          - _build/target/
          - target_docs/
          - target_test/

check:
    image: "registry.gitlab.com/alatiera/rustfmt-oci-image/rustfmt:stable"
    stage: "check"
    script:
        # Create blank versions of our configured files
        # so rustfmt does not yell about non-existent files or completely empty files
        - echo -e "" >> fractal-gtk/src/config.rs
        - echo -e "" >> fractal-gtk/src/static_resources.rs
        - rustc -Vv && cargo -Vv
        - cargo --version
        - cargo fmt --all -- --check

flatpak:
  extends: '.flatpak'
  image: "$FLATPAK_IMAGE"
  variables:
    RUNTIME_REPO: 'https://nightly.gnome.org/gnome-nightly.flatpakrepo'
    APP_ID: "org.gnome.FractalDevel"

nightly:
  extends: '.publish_nightly'
  dependencies: ['flatpak']
  needs: ['flatpak']

pages:
    image: "$FLATPAK_IMAGE"
    stage: deploy
    tags:
        - flatpak
    script:
        - flatpak-builder --user --disable-rofiles-fuse --stop-at=${FLATPAK_MODULE} --force-clean app ${MANIFEST_PATH}
        - flatpak-builder --user --disable-rofiles-fuse --run app ${MANIFEST_PATH} meson _build

        - flatpak-builder --user --disable-rofiles-fuse --run app ${MANIFEST_PATH} ninja -C _build doc

        - rm -rf public
        - mv _build/target/doc/ public
    artifacts:
        paths:
          - public
    only:
        - master
    <<: *flatpak_cache
